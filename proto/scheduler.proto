syntax = "proto3";
package scheduler;

import "google/protobuf/timestamp.proto";

service Scheduler {
	rpc ScheduleMessage (ScheduleMessageRequest) returns (ScheduleMessageResponse);
}

message NatsEvent {
	string subject = 1;
	bytes payload = 2;
}

message Delayed {
	google.protobuf.Timestamp transmit_at = 1;
}

message ScheduleMessageRequest {
	oneof Schedule {
		Delayed delayed = 1;
	}
	oneof Message {
		NatsEvent nats_event = 2;
	}
}

message ScheduleMessageResponse {
	string schedule_entry_id = 1 ;
}

// Implement gRPC Health Checking Protocol.
// https://github.com/grpc/grpc/blob/master/doc/health-checking.md
service Health {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);

  rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
}
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
  }
  ServingStatus status = 1;
}

