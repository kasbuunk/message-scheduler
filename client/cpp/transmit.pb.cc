// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transmit.proto

#include "transmit.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace transmit {

inline constexpr ScheduleTransmissionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : transmission_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ScheduleTransmissionResponse::ScheduleTransmissionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScheduleTransmissionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScheduleTransmissionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScheduleTransmissionResponseDefaultTypeInternal() {}
  union {
    ScheduleTransmissionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScheduleTransmissionResponseDefaultTypeInternal _ScheduleTransmissionResponse_default_instance_;

inline constexpr NatsEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NatsEvent::NatsEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NatsEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NatsEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NatsEventDefaultTypeInternal() {}
  union {
    NatsEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NatsEventDefaultTypeInternal _NatsEvent_default_instance_;

inline constexpr HealthCheckResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_{static_cast< ::transmit::HealthCheckResponse_ServingStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HealthCheckResponse::HealthCheckResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HealthCheckResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthCheckResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthCheckResponseDefaultTypeInternal() {}
  union {
    HealthCheckResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthCheckResponseDefaultTypeInternal _HealthCheckResponse_default_instance_;

inline constexpr HealthCheckRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : service_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HealthCheckRequest::HealthCheckRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HealthCheckRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthCheckRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthCheckRequestDefaultTypeInternal() {}
  union {
    HealthCheckRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthCheckRequestDefaultTypeInternal _HealthCheckRequest_default_instance_;

inline constexpr Interval::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        first_transmission_{nullptr},
        interval_{nullptr},
        Iterate_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Interval::Interval(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IntervalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntervalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntervalDefaultTypeInternal() {}
  union {
    Interval _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntervalDefaultTypeInternal _Interval_default_instance_;

inline constexpr Delayed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transmit_at_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Delayed::Delayed(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DelayedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelayedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelayedDefaultTypeInternal() {}
  union {
    Delayed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelayedDefaultTypeInternal _Delayed_default_instance_;

inline constexpr Cron::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        schedule_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        first_transmission_after_{nullptr},
        Iterate_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Cron::Cron(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CronDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CronDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CronDefaultTypeInternal() {}
  union {
    Cron _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CronDefaultTypeInternal _Cron_default_instance_;

inline constexpr ScheduleTransmissionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : Schedule_{},
        Message_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ScheduleTransmissionRequest::ScheduleTransmissionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ScheduleTransmissionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScheduleTransmissionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScheduleTransmissionRequestDefaultTypeInternal() {}
  union {
    ScheduleTransmissionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScheduleTransmissionRequestDefaultTypeInternal _ScheduleTransmissionRequest_default_instance_;
}  // namespace transmit
static ::_pb::Metadata file_level_metadata_transmit_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_transmit_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_transmit_2eproto = nullptr;
const ::uint32_t TableStruct_transmit_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::transmit::ScheduleTransmissionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::transmit::ScheduleTransmissionRequest, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::transmit::ScheduleTransmissionRequest, _impl_.Schedule_),
    PROTOBUF_FIELD_OFFSET(::transmit::ScheduleTransmissionRequest, _impl_.Message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::transmit::ScheduleTransmissionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transmit::ScheduleTransmissionResponse, _impl_.transmission_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::transmit::NatsEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transmit::NatsEvent, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::transmit::NatsEvent, _impl_.payload_),
    PROTOBUF_FIELD_OFFSET(::transmit::Delayed, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transmit::Delayed, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transmit::Delayed, _impl_.transmit_at_),
    0,
    PROTOBUF_FIELD_OFFSET(::transmit::Interval, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transmit::Interval, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::transmit::Interval, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transmit::Interval, _impl_.first_transmission_),
    PROTOBUF_FIELD_OFFSET(::transmit::Interval, _impl_.interval_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::transmit::Interval, _impl_.Iterate_),
    0,
    1,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::transmit::Cron, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::transmit::Cron, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::transmit::Cron, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transmit::Cron, _impl_.first_transmission_after_),
    PROTOBUF_FIELD_OFFSET(::transmit::Cron, _impl_.schedule_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::transmit::Cron, _impl_.Iterate_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::transmit::HealthCheckRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transmit::HealthCheckRequest, _impl_.service_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::transmit::HealthCheckResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::transmit::HealthCheckResponse, _impl_.status_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::transmit::ScheduleTransmissionRequest)},
        {14, -1, -1, sizeof(::transmit::ScheduleTransmissionResponse)},
        {23, -1, -1, sizeof(::transmit::NatsEvent)},
        {33, 42, -1, sizeof(::transmit::Delayed)},
        {43, 56, -1, sizeof(::transmit::Interval)},
        {60, 73, -1, sizeof(::transmit::Cron)},
        {77, -1, -1, sizeof(::transmit::HealthCheckRequest)},
        {86, -1, -1, sizeof(::transmit::HealthCheckResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::transmit::_ScheduleTransmissionRequest_default_instance_._instance,
    &::transmit::_ScheduleTransmissionResponse_default_instance_._instance,
    &::transmit::_NatsEvent_default_instance_._instance,
    &::transmit::_Delayed_default_instance_._instance,
    &::transmit::_Interval_default_instance_._instance,
    &::transmit::_Cron_default_instance_._instance,
    &::transmit::_HealthCheckRequest_default_instance_._instance,
    &::transmit::_HealthCheckResponse_default_instance_._instance,
};
const char descriptor_table_protodef_transmit_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\016transmit.proto\022\010transmit\032\037google/proto"
    "buf/timestamp.proto\032\036google/protobuf/dur"
    "ation.proto\"\315\001\n\033ScheduleTransmissionRequ"
    "est\022$\n\007delayed\030\001 \001(\0132\021.transmit.DelayedH"
    "\000\022&\n\010interval\030\002 \001(\0132\022.transmit.IntervalH"
    "\000\022\036\n\004cron\030\003 \001(\0132\016.transmit.CronH\000\022)\n\nnat"
    "s_event\030\004 \001(\0132\023.transmit.NatsEventH\001B\n\n\010"
    "ScheduleB\t\n\007Message\"7\n\034ScheduleTransmiss"
    "ionResponse\022\027\n\017transmission_id\030\001 \001(\t\"-\n\t"
    "NatsEvent\022\017\n\007subject\030\001 \001(\t\022\017\n\007payload\030\002 "
    "\001(\014\":\n\007Delayed\022/\n\013transmit_at\030\001 \001(\0132\032.go"
    "ogle.protobuf.Timestamp\"\241\001\n\010Interval\0226\n\022"
    "first_transmission\030\001 \001(\0132\032.google.protob"
    "uf.Timestamp\022+\n\010interval\030\002 \001(\0132\031.google."
    "protobuf.Duration\022\017\n\005times\030\003 \001(\rH\000\022\024\n\nin"
    "finitely\030\004 \001(\010H\000B\t\n\007Iterate\"\210\001\n\004Cron\022<\n\030"
    "first_transmission_after\030\001 \001(\0132\032.google."
    "protobuf.Timestamp\022\020\n\010schedule\030\002 \001(\t\022\017\n\005"
    "times\030\003 \001(\rH\000\022\024\n\ninfinitely\030\004 \001(\010H\000B\t\n\007I"
    "terate\"%\n\022HealthCheckRequest\022\017\n\007service\030"
    "\001 \001(\t\"\243\001\n\023HealthCheckResponse\022;\n\006status\030"
    "\001 \001(\0162+.transmit.HealthCheckResponse.Ser"
    "vingStatus\"O\n\rServingStatus\022\013\n\007UNKNOWN\020\000"
    "\022\013\n\007SERVING\020\001\022\017\n\013NOT_SERVING\020\002\022\023\n\017SERVIC"
    "E_UNKNOWN\020\0032q\n\010Transmit\022e\n\024ScheduleTrans"
    "mission\022%.transmit.ScheduleTransmissionR"
    "equest\032&.transmit.ScheduleTransmissionRe"
    "sponse2\226\001\n\006Health\022D\n\005Check\022\034.transmit.He"
    "althCheckRequest\032\035.transmit.HealthCheckR"
    "esponse\022F\n\005Watch\022\034.transmit.HealthCheckR"
    "equest\032\035.transmit.HealthCheckResponse0\001b"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_transmit_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_transmit_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_transmit_2eproto = {
    false,
    false,
    1247,
    descriptor_table_protodef_transmit_2eproto,
    "transmit.proto",
    &descriptor_table_transmit_2eproto_once,
    descriptor_table_transmit_2eproto_deps,
    2,
    8,
    schemas,
    file_default_instances,
    TableStruct_transmit_2eproto::offsets,
    file_level_metadata_transmit_2eproto,
    file_level_enum_descriptors_transmit_2eproto,
    file_level_service_descriptors_transmit_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_transmit_2eproto_getter() {
  return &descriptor_table_transmit_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_transmit_2eproto(&descriptor_table_transmit_2eproto);
namespace transmit {
const ::google::protobuf::EnumDescriptor* HealthCheckResponse_ServingStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_transmit_2eproto);
  return file_level_enum_descriptors_transmit_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t HealthCheckResponse_ServingStatus_internal_data_[] = {
    262144u, 0u, };
bool HealthCheckResponse_ServingStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr HealthCheckResponse_ServingStatus HealthCheckResponse::UNKNOWN;
constexpr HealthCheckResponse_ServingStatus HealthCheckResponse::SERVING;
constexpr HealthCheckResponse_ServingStatus HealthCheckResponse::NOT_SERVING;
constexpr HealthCheckResponse_ServingStatus HealthCheckResponse::SERVICE_UNKNOWN;
constexpr HealthCheckResponse_ServingStatus HealthCheckResponse::ServingStatus_MIN;
constexpr HealthCheckResponse_ServingStatus HealthCheckResponse::ServingStatus_MAX;
constexpr int HealthCheckResponse::ServingStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class ScheduleTransmissionRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::transmit::ScheduleTransmissionRequest, _impl_._oneof_case_);
  static const ::transmit::Delayed& delayed(const ScheduleTransmissionRequest* msg);
  static const ::transmit::Interval& interval(const ScheduleTransmissionRequest* msg);
  static const ::transmit::Cron& cron(const ScheduleTransmissionRequest* msg);
  static const ::transmit::NatsEvent& nats_event(const ScheduleTransmissionRequest* msg);
};

const ::transmit::Delayed& ScheduleTransmissionRequest::_Internal::delayed(const ScheduleTransmissionRequest* msg) {
  return *msg->_impl_.Schedule_.delayed_;
}
const ::transmit::Interval& ScheduleTransmissionRequest::_Internal::interval(const ScheduleTransmissionRequest* msg) {
  return *msg->_impl_.Schedule_.interval_;
}
const ::transmit::Cron& ScheduleTransmissionRequest::_Internal::cron(const ScheduleTransmissionRequest* msg) {
  return *msg->_impl_.Schedule_.cron_;
}
const ::transmit::NatsEvent& ScheduleTransmissionRequest::_Internal::nats_event(const ScheduleTransmissionRequest* msg) {
  return *msg->_impl_.Message_.nats_event_;
}
void ScheduleTransmissionRequest::set_allocated_delayed(::transmit::Delayed* delayed) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Schedule();
  if (delayed) {
    ::google::protobuf::Arena* submessage_arena = delayed->GetArena();
    if (message_arena != submessage_arena) {
      delayed = ::google::protobuf::internal::GetOwnedMessage(message_arena, delayed, submessage_arena);
    }
    set_has_delayed();
    _impl_.Schedule_.delayed_ = delayed;
  }
  // @@protoc_insertion_point(field_set_allocated:transmit.ScheduleTransmissionRequest.delayed)
}
void ScheduleTransmissionRequest::set_allocated_interval(::transmit::Interval* interval) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Schedule();
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = interval->GetArena();
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(message_arena, interval, submessage_arena);
    }
    set_has_interval();
    _impl_.Schedule_.interval_ = interval;
  }
  // @@protoc_insertion_point(field_set_allocated:transmit.ScheduleTransmissionRequest.interval)
}
void ScheduleTransmissionRequest::set_allocated_cron(::transmit::Cron* cron) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Schedule();
  if (cron) {
    ::google::protobuf::Arena* submessage_arena = cron->GetArena();
    if (message_arena != submessage_arena) {
      cron = ::google::protobuf::internal::GetOwnedMessage(message_arena, cron, submessage_arena);
    }
    set_has_cron();
    _impl_.Schedule_.cron_ = cron;
  }
  // @@protoc_insertion_point(field_set_allocated:transmit.ScheduleTransmissionRequest.cron)
}
void ScheduleTransmissionRequest::set_allocated_nats_event(::transmit::NatsEvent* nats_event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Message();
  if (nats_event) {
    ::google::protobuf::Arena* submessage_arena = nats_event->GetArena();
    if (message_arena != submessage_arena) {
      nats_event = ::google::protobuf::internal::GetOwnedMessage(message_arena, nats_event, submessage_arena);
    }
    set_has_nats_event();
    _impl_.Message_.nats_event_ = nats_event;
  }
  // @@protoc_insertion_point(field_set_allocated:transmit.ScheduleTransmissionRequest.nats_event)
}
ScheduleTransmissionRequest::ScheduleTransmissionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transmit.ScheduleTransmissionRequest)
}
inline PROTOBUF_NDEBUG_INLINE ScheduleTransmissionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : Schedule_{},
        Message_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0], from._oneof_case_[1]} {}

ScheduleTransmissionRequest::ScheduleTransmissionRequest(
    ::google::protobuf::Arena* arena,
    const ScheduleTransmissionRequest& from)
    : ::google::protobuf::Message(arena) {
  ScheduleTransmissionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (Schedule_case()) {
    case SCHEDULE_NOT_SET:
      break;
      case kDelayed:
        _impl_.Schedule_.delayed_ = CreateMaybeMessage<::transmit::Delayed>(arena, *from._impl_.Schedule_.delayed_);
        break;
      case kInterval:
        _impl_.Schedule_.interval_ = CreateMaybeMessage<::transmit::Interval>(arena, *from._impl_.Schedule_.interval_);
        break;
      case kCron:
        _impl_.Schedule_.cron_ = CreateMaybeMessage<::transmit::Cron>(arena, *from._impl_.Schedule_.cron_);
        break;
  }
  switch (Message_case()) {
    case MESSAGE_NOT_SET:
      break;
      case kNatsEvent:
        _impl_.Message_.nats_event_ = CreateMaybeMessage<::transmit::NatsEvent>(arena, *from._impl_.Message_.nats_event_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:transmit.ScheduleTransmissionRequest)
}
inline PROTOBUF_NDEBUG_INLINE ScheduleTransmissionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : Schedule_{},
        Message_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ScheduleTransmissionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ScheduleTransmissionRequest::~ScheduleTransmissionRequest() {
  // @@protoc_insertion_point(destructor:transmit.ScheduleTransmissionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScheduleTransmissionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_Schedule()) {
    clear_Schedule();
  }
  if (has_Message()) {
    clear_Message();
  }
  _impl_.~Impl_();
}

void ScheduleTransmissionRequest::clear_Schedule() {
// @@protoc_insertion_point(one_of_clear_start:transmit.ScheduleTransmissionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (Schedule_case()) {
    case kDelayed: {
      if (GetArena() == nullptr) {
        delete _impl_.Schedule_.delayed_;
      }
      break;
    }
    case kInterval: {
      if (GetArena() == nullptr) {
        delete _impl_.Schedule_.interval_;
      }
      break;
    }
    case kCron: {
      if (GetArena() == nullptr) {
        delete _impl_.Schedule_.cron_;
      }
      break;
    }
    case SCHEDULE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SCHEDULE_NOT_SET;
}

void ScheduleTransmissionRequest::clear_Message() {
// @@protoc_insertion_point(one_of_clear_start:transmit.ScheduleTransmissionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (Message_case()) {
    case kNatsEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.Message_.nats_event_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = MESSAGE_NOT_SET;
}


PROTOBUF_NOINLINE void ScheduleTransmissionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:transmit.ScheduleTransmissionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Schedule();
  clear_Message();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScheduleTransmissionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> ScheduleTransmissionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ScheduleTransmissionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .transmit.Delayed delayed = 1;
    {PROTOBUF_FIELD_OFFSET(ScheduleTransmissionRequest, _impl_.Schedule_.delayed_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .transmit.Interval interval = 2;
    {PROTOBUF_FIELD_OFFSET(ScheduleTransmissionRequest, _impl_.Schedule_.interval_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .transmit.Cron cron = 3;
    {PROTOBUF_FIELD_OFFSET(ScheduleTransmissionRequest, _impl_.Schedule_.cron_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .transmit.NatsEvent nats_event = 4;
    {PROTOBUF_FIELD_OFFSET(ScheduleTransmissionRequest, _impl_.Message_.nats_event_), _Internal::kOneofCaseOffset + 4, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::transmit::Delayed>()},
    {::_pbi::TcParser::GetTable<::transmit::Interval>()},
    {::_pbi::TcParser::GetTable<::transmit::Cron>()},
    {::_pbi::TcParser::GetTable<::transmit::NatsEvent>()},
  }}, {{
  }},
};

::uint8_t* ScheduleTransmissionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmit.ScheduleTransmissionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (Schedule_case()) {
    case kDelayed: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::delayed(this),
          _Internal::delayed(this).GetCachedSize(), target, stream);
      break;
    }
    case kInterval: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::interval(this),
          _Internal::interval(this).GetCachedSize(), target, stream);
      break;
    }
    case kCron: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::cron(this),
          _Internal::cron(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // .transmit.NatsEvent nats_event = 4;
  if (Message_case() == kNatsEvent) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::nats_event(this),
        _Internal::nats_event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transmit.ScheduleTransmissionRequest)
  return target;
}

::size_t ScheduleTransmissionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transmit.ScheduleTransmissionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Schedule_case()) {
    // .transmit.Delayed delayed = 1;
    case kDelayed: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Schedule_.delayed_);
      break;
    }
    // .transmit.Interval interval = 2;
    case kInterval: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Schedule_.interval_);
      break;
    }
    // .transmit.Cron cron = 3;
    case kCron: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Schedule_.cron_);
      break;
    }
    case SCHEDULE_NOT_SET: {
      break;
    }
  }
  switch (Message_case()) {
    // .transmit.NatsEvent nats_event = 4;
    case kNatsEvent: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Message_.nats_event_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScheduleTransmissionRequest::_class_data_ = {
    ScheduleTransmissionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScheduleTransmissionRequest::GetClassData() const {
  return &_class_data_;
}

void ScheduleTransmissionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScheduleTransmissionRequest*>(&to_msg);
  auto& from = static_cast<const ScheduleTransmissionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transmit.ScheduleTransmissionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Schedule_case()) {
    case kDelayed: {
      _this->_internal_mutable_delayed()->::transmit::Delayed::MergeFrom(
          from._internal_delayed());
      break;
    }
    case kInterval: {
      _this->_internal_mutable_interval()->::transmit::Interval::MergeFrom(
          from._internal_interval());
      break;
    }
    case kCron: {
      _this->_internal_mutable_cron()->::transmit::Cron::MergeFrom(
          from._internal_cron());
      break;
    }
    case SCHEDULE_NOT_SET: {
      break;
    }
  }
  switch (from.Message_case()) {
    case kNatsEvent: {
      _this->_internal_mutable_nats_event()->::transmit::NatsEvent::MergeFrom(
          from._internal_nats_event());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScheduleTransmissionRequest::CopyFrom(const ScheduleTransmissionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmit.ScheduleTransmissionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScheduleTransmissionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScheduleTransmissionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScheduleTransmissionRequest::InternalSwap(ScheduleTransmissionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.Schedule_, other->_impl_.Schedule_);
  swap(_impl_.Message_, other->_impl_.Message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::google::protobuf::Metadata ScheduleTransmissionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transmit_2eproto_getter, &descriptor_table_transmit_2eproto_once,
      file_level_metadata_transmit_2eproto[0]);
}
// ===================================================================

class ScheduleTransmissionResponse::_Internal {
 public:
};

ScheduleTransmissionResponse::ScheduleTransmissionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transmit.ScheduleTransmissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE ScheduleTransmissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : transmission_id_(arena, from.transmission_id_),
        _cached_size_{0} {}

ScheduleTransmissionResponse::ScheduleTransmissionResponse(
    ::google::protobuf::Arena* arena,
    const ScheduleTransmissionResponse& from)
    : ::google::protobuf::Message(arena) {
  ScheduleTransmissionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:transmit.ScheduleTransmissionResponse)
}
inline PROTOBUF_NDEBUG_INLINE ScheduleTransmissionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : transmission_id_(arena),
        _cached_size_{0} {}

inline void ScheduleTransmissionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ScheduleTransmissionResponse::~ScheduleTransmissionResponse() {
  // @@protoc_insertion_point(destructor:transmit.ScheduleTransmissionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ScheduleTransmissionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.transmission_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ScheduleTransmissionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:transmit.ScheduleTransmissionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transmission_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ScheduleTransmissionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 61, 2> ScheduleTransmissionResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ScheduleTransmissionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string transmission_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ScheduleTransmissionResponse, _impl_.transmission_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string transmission_id = 1;
    {PROTOBUF_FIELD_OFFSET(ScheduleTransmissionResponse, _impl_.transmission_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\17\0\0\0\0\0\0"
    "transmit.ScheduleTransmissionResponse"
    "transmission_id"
  }},
};

::uint8_t* ScheduleTransmissionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmit.ScheduleTransmissionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string transmission_id = 1;
  if (!this->_internal_transmission_id().empty()) {
    const std::string& _s = this->_internal_transmission_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "transmit.ScheduleTransmissionResponse.transmission_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transmit.ScheduleTransmissionResponse)
  return target;
}

::size_t ScheduleTransmissionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transmit.ScheduleTransmissionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transmission_id = 1;
  if (!this->_internal_transmission_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_transmission_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ScheduleTransmissionResponse::_class_data_ = {
    ScheduleTransmissionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ScheduleTransmissionResponse::GetClassData() const {
  return &_class_data_;
}

void ScheduleTransmissionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ScheduleTransmissionResponse*>(&to_msg);
  auto& from = static_cast<const ScheduleTransmissionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transmit.ScheduleTransmissionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transmission_id().empty()) {
    _this->_internal_set_transmission_id(from._internal_transmission_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScheduleTransmissionResponse::CopyFrom(const ScheduleTransmissionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmit.ScheduleTransmissionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ScheduleTransmissionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ScheduleTransmissionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ScheduleTransmissionResponse::InternalSwap(ScheduleTransmissionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transmission_id_, &other->_impl_.transmission_id_, arena);
}

::google::protobuf::Metadata ScheduleTransmissionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transmit_2eproto_getter, &descriptor_table_transmit_2eproto_once,
      file_level_metadata_transmit_2eproto[1]);
}
// ===================================================================

class NatsEvent::_Internal {
 public:
};

NatsEvent::NatsEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transmit.NatsEvent)
}
inline PROTOBUF_NDEBUG_INLINE NatsEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : subject_(arena, from.subject_),
        payload_(arena, from.payload_),
        _cached_size_{0} {}

NatsEvent::NatsEvent(
    ::google::protobuf::Arena* arena,
    const NatsEvent& from)
    : ::google::protobuf::Message(arena) {
  NatsEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:transmit.NatsEvent)
}
inline PROTOBUF_NDEBUG_INLINE NatsEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : subject_(arena),
        payload_(arena),
        _cached_size_{0} {}

inline void NatsEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NatsEvent::~NatsEvent() {
  // @@protoc_insertion_point(destructor:transmit.NatsEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NatsEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.subject_.Destroy();
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NatsEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:transmit.NatsEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subject_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NatsEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 34, 2> NatsEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NatsEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NatsEvent, _impl_.payload_)}},
    // string subject = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NatsEvent, _impl_.subject_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string subject = 1;
    {PROTOBUF_FIELD_OFFSET(NatsEvent, _impl_.subject_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(NatsEvent, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\7\0\0\0\0\0\0"
    "transmit.NatsEvent"
    "subject"
  }},
};

::uint8_t* NatsEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmit.NatsEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string subject = 1;
  if (!this->_internal_subject().empty()) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "transmit.NatsEvent.subject");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transmit.NatsEvent)
  return target;
}

::size_t NatsEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transmit.NatsEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subject = 1;
  if (!this->_internal_subject().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subject());
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_payload());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NatsEvent::_class_data_ = {
    NatsEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NatsEvent::GetClassData() const {
  return &_class_data_;
}

void NatsEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NatsEvent*>(&to_msg);
  auto& from = static_cast<const NatsEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transmit.NatsEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subject().empty()) {
    _this->_internal_set_subject(from._internal_subject());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NatsEvent::CopyFrom(const NatsEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmit.NatsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NatsEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NatsEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NatsEvent::InternalSwap(NatsEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
}

::google::protobuf::Metadata NatsEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transmit_2eproto_getter, &descriptor_table_transmit_2eproto_once,
      file_level_metadata_transmit_2eproto[2]);
}
// ===================================================================

class Delayed::_Internal {
 public:
  using HasBits = decltype(std::declval<Delayed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Delayed, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& transmit_at(const Delayed* msg);
  static void set_has_transmit_at(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& Delayed::_Internal::transmit_at(const Delayed* msg) {
  return *msg->_impl_.transmit_at_;
}
void Delayed::clear_transmit_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.transmit_at_ != nullptr) _impl_.transmit_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Delayed::Delayed(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transmit.Delayed)
}
inline PROTOBUF_NDEBUG_INLINE Delayed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Delayed::Delayed(
    ::google::protobuf::Arena* arena,
    const Delayed& from)
    : ::google::protobuf::Message(arena) {
  Delayed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.transmit_at_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.transmit_at_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:transmit.Delayed)
}
inline PROTOBUF_NDEBUG_INLINE Delayed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Delayed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.transmit_at_ = {};
}
Delayed::~Delayed() {
  // @@protoc_insertion_point(destructor:transmit.Delayed)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Delayed::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.transmit_at_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Delayed::Clear() {
// @@protoc_insertion_point(message_clear_start:transmit.Delayed)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.transmit_at_ != nullptr);
    _impl_.transmit_at_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Delayed::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Delayed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Delayed, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Delayed_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp transmit_at = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Delayed, _impl_.transmit_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp transmit_at = 1;
    {PROTOBUF_FIELD_OFFSET(Delayed, _impl_.transmit_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* Delayed::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmit.Delayed)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp transmit_at = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::transmit_at(this),
        _Internal::transmit_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transmit.Delayed)
  return target;
}

::size_t Delayed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transmit.Delayed)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp transmit_at = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.transmit_at_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Delayed::_class_data_ = {
    Delayed::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Delayed::GetClassData() const {
  return &_class_data_;
}

void Delayed::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Delayed*>(&to_msg);
  auto& from = static_cast<const Delayed&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transmit.Delayed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_transmit_at()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_transmit_at());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Delayed::CopyFrom(const Delayed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmit.Delayed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Delayed::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Delayed::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Delayed::InternalSwap(Delayed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.transmit_at_, other->_impl_.transmit_at_);
}

::google::protobuf::Metadata Delayed::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transmit_2eproto_getter, &descriptor_table_transmit_2eproto_once,
      file_level_metadata_transmit_2eproto[3]);
}
// ===================================================================

class Interval::_Internal {
 public:
  using HasBits = decltype(std::declval<Interval>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Interval, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::transmit::Interval, _impl_._oneof_case_);
  static const ::google::protobuf::Timestamp& first_transmission(const Interval* msg);
  static void set_has_first_transmission(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Duration& interval(const Interval* msg);
  static void set_has_interval(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& Interval::_Internal::first_transmission(const Interval* msg) {
  return *msg->_impl_.first_transmission_;
}
const ::google::protobuf::Duration& Interval::_Internal::interval(const Interval* msg) {
  return *msg->_impl_.interval_;
}
void Interval::clear_first_transmission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.first_transmission_ != nullptr) _impl_.first_transmission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Interval::clear_interval() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.interval_ != nullptr) _impl_.interval_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Interval::Interval(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transmit.Interval)
}
inline PROTOBUF_NDEBUG_INLINE Interval::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        Iterate_{},
        _oneof_case_{from._oneof_case_[0]} {}

Interval::Interval(
    ::google::protobuf::Arena* arena,
    const Interval& from)
    : ::google::protobuf::Message(arena) {
  Interval* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.first_transmission_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.first_transmission_)
                : nullptr;
  _impl_.interval_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Duration>(arena, *from._impl_.interval_)
                : nullptr;
  switch (Iterate_case()) {
    case ITERATE_NOT_SET:
      break;
      case kTimes:
        _impl_.Iterate_.times_ = from._impl_.Iterate_.times_;
        break;
      case kInfinitely:
        _impl_.Iterate_.infinitely_ = from._impl_.Iterate_.infinitely_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:transmit.Interval)
}
inline PROTOBUF_NDEBUG_INLINE Interval::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        Iterate_{},
        _oneof_case_{} {}

inline void Interval::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, first_transmission_),
           0,
           offsetof(Impl_, interval_) -
               offsetof(Impl_, first_transmission_) +
               sizeof(Impl_::interval_));
}
Interval::~Interval() {
  // @@protoc_insertion_point(destructor:transmit.Interval)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Interval::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.first_transmission_;
  delete _impl_.interval_;
  if (has_Iterate()) {
    clear_Iterate();
  }
  _impl_.~Impl_();
}

void Interval::clear_Iterate() {
// @@protoc_insertion_point(one_of_clear_start:transmit.Interval)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (Iterate_case()) {
    case kTimes: {
      // No need to clear
      break;
    }
    case kInfinitely: {
      // No need to clear
      break;
    }
    case ITERATE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ITERATE_NOT_SET;
}


PROTOBUF_NOINLINE void Interval::Clear() {
// @@protoc_insertion_point(message_clear_start:transmit.Interval)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.first_transmission_ != nullptr);
      _impl_.first_transmission_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.interval_ != nullptr);
      _impl_.interval_->Clear();
    }
  }
  clear_Iterate();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Interval::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 2, 0, 2> Interval::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Interval, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Interval_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Duration interval = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Interval, _impl_.interval_)}},
    // .google.protobuf.Timestamp first_transmission = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Interval, _impl_.first_transmission_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp first_transmission = 1;
    {PROTOBUF_FIELD_OFFSET(Interval, _impl_.first_transmission_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration interval = 2;
    {PROTOBUF_FIELD_OFFSET(Interval, _impl_.interval_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 times = 3;
    {PROTOBUF_FIELD_OFFSET(Interval, _impl_.Iterate_.times_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // bool infinitely = 4;
    {PROTOBUF_FIELD_OFFSET(Interval, _impl_.Iterate_.infinitely_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

::uint8_t* Interval::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmit.Interval)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp first_transmission = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::first_transmission(this),
        _Internal::first_transmission(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Duration interval = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::interval(this),
        _Internal::interval(this).GetCachedSize(), target, stream);
  }

  switch (Iterate_case()) {
    case kTimes: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this->_internal_times(), target);
      break;
    }
    case kInfinitely: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this->_internal_infinitely(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transmit.Interval)
  return target;
}

::size_t Interval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transmit.Interval)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp first_transmission = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.first_transmission_);
    }

    // .google.protobuf.Duration interval = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.interval_);
    }

  }
  switch (Iterate_case()) {
    // uint32 times = 3;
    case kTimes: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_times());
      break;
    }
    // bool infinitely = 4;
    case kInfinitely: {
      total_size += 2;
      break;
    }
    case ITERATE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Interval::_class_data_ = {
    Interval::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Interval::GetClassData() const {
  return &_class_data_;
}

void Interval::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Interval*>(&to_msg);
  auto& from = static_cast<const Interval&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transmit.Interval)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_first_transmission()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_first_transmission());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_interval()->::google::protobuf::Duration::MergeFrom(
          from._internal_interval());
    }
  }
  switch (from.Iterate_case()) {
    case kTimes: {
      _this->_internal_set_times(from._internal_times());
      break;
    }
    case kInfinitely: {
      _this->_internal_set_infinitely(from._internal_infinitely());
      break;
    }
    case ITERATE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Interval::CopyFrom(const Interval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmit.Interval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Interval::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Interval::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Interval::InternalSwap(Interval* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Interval, _impl_.interval_)
      + sizeof(Interval::_impl_.interval_)
      - PROTOBUF_FIELD_OFFSET(Interval, _impl_.first_transmission_)>(
          reinterpret_cast<char*>(&_impl_.first_transmission_),
          reinterpret_cast<char*>(&other->_impl_.first_transmission_));
  swap(_impl_.Iterate_, other->_impl_.Iterate_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Interval::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transmit_2eproto_getter, &descriptor_table_transmit_2eproto_once,
      file_level_metadata_transmit_2eproto[4]);
}
// ===================================================================

class Cron::_Internal {
 public:
  using HasBits = decltype(std::declval<Cron>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Cron, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::transmit::Cron, _impl_._oneof_case_);
  static const ::google::protobuf::Timestamp& first_transmission_after(const Cron* msg);
  static void set_has_first_transmission_after(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& Cron::_Internal::first_transmission_after(const Cron* msg) {
  return *msg->_impl_.first_transmission_after_;
}
void Cron::clear_first_transmission_after() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.first_transmission_after_ != nullptr) _impl_.first_transmission_after_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Cron::Cron(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transmit.Cron)
}
inline PROTOBUF_NDEBUG_INLINE Cron::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        schedule_(arena, from.schedule_),
        Iterate_{},
        _oneof_case_{from._oneof_case_[0]} {}

Cron::Cron(
    ::google::protobuf::Arena* arena,
    const Cron& from)
    : ::google::protobuf::Message(arena) {
  Cron* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.first_transmission_after_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.first_transmission_after_)
                : nullptr;
  switch (Iterate_case()) {
    case ITERATE_NOT_SET:
      break;
      case kTimes:
        _impl_.Iterate_.times_ = from._impl_.Iterate_.times_;
        break;
      case kInfinitely:
        _impl_.Iterate_.infinitely_ = from._impl_.Iterate_.infinitely_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:transmit.Cron)
}
inline PROTOBUF_NDEBUG_INLINE Cron::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        schedule_(arena),
        Iterate_{},
        _oneof_case_{} {}

inline void Cron::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.first_transmission_after_ = {};
}
Cron::~Cron() {
  // @@protoc_insertion_point(destructor:transmit.Cron)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Cron::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.schedule_.Destroy();
  delete _impl_.first_transmission_after_;
  if (has_Iterate()) {
    clear_Iterate();
  }
  _impl_.~Impl_();
}

void Cron::clear_Iterate() {
// @@protoc_insertion_point(one_of_clear_start:transmit.Cron)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (Iterate_case()) {
    case kTimes: {
      // No need to clear
      break;
    }
    case kInfinitely: {
      // No need to clear
      break;
    }
    case ITERATE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ITERATE_NOT_SET;
}


PROTOBUF_NOINLINE void Cron::Clear() {
// @@protoc_insertion_point(message_clear_start:transmit.Cron)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.schedule_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.first_transmission_after_ != nullptr);
    _impl_.first_transmission_after_->Clear();
  }
  clear_Iterate();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Cron::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 1, 30, 2> Cron::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Cron, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Cron_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string schedule = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Cron, _impl_.schedule_)}},
    // .google.protobuf.Timestamp first_transmission_after = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Cron, _impl_.first_transmission_after_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp first_transmission_after = 1;
    {PROTOBUF_FIELD_OFFSET(Cron, _impl_.first_transmission_after_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string schedule = 2;
    {PROTOBUF_FIELD_OFFSET(Cron, _impl_.schedule_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 times = 3;
    {PROTOBUF_FIELD_OFFSET(Cron, _impl_.Iterate_.times_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // bool infinitely = 4;
    {PROTOBUF_FIELD_OFFSET(Cron, _impl_.Iterate_.infinitely_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\15\0\10\0\0\0\0\0"
    "transmit.Cron"
    "schedule"
  }},
};

::uint8_t* Cron::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmit.Cron)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp first_transmission_after = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::first_transmission_after(this),
        _Internal::first_transmission_after(this).GetCachedSize(), target, stream);
  }

  // string schedule = 2;
  if (!this->_internal_schedule().empty()) {
    const std::string& _s = this->_internal_schedule();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "transmit.Cron.schedule");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  switch (Iterate_case()) {
    case kTimes: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this->_internal_times(), target);
      break;
    }
    case kInfinitely: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this->_internal_infinitely(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transmit.Cron)
  return target;
}

::size_t Cron::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transmit.Cron)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string schedule = 2;
  if (!this->_internal_schedule().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_schedule());
  }

  // .google.protobuf.Timestamp first_transmission_after = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.first_transmission_after_);
  }

  switch (Iterate_case()) {
    // uint32 times = 3;
    case kTimes: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_times());
      break;
    }
    // bool infinitely = 4;
    case kInfinitely: {
      total_size += 2;
      break;
    }
    case ITERATE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Cron::_class_data_ = {
    Cron::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Cron::GetClassData() const {
  return &_class_data_;
}

void Cron::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Cron*>(&to_msg);
  auto& from = static_cast<const Cron&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transmit.Cron)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_schedule().empty()) {
    _this->_internal_set_schedule(from._internal_schedule());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_first_transmission_after()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_first_transmission_after());
  }
  switch (from.Iterate_case()) {
    case kTimes: {
      _this->_internal_set_times(from._internal_times());
      break;
    }
    case kInfinitely: {
      _this->_internal_set_infinitely(from._internal_infinitely());
      break;
    }
    case ITERATE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Cron::CopyFrom(const Cron& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmit.Cron)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Cron::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Cron::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Cron::InternalSwap(Cron* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.schedule_, &other->_impl_.schedule_, arena);
  swap(_impl_.first_transmission_after_, other->_impl_.first_transmission_after_);
  swap(_impl_.Iterate_, other->_impl_.Iterate_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Cron::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transmit_2eproto_getter, &descriptor_table_transmit_2eproto_once,
      file_level_metadata_transmit_2eproto[5]);
}
// ===================================================================

class HealthCheckRequest::_Internal {
 public:
};

HealthCheckRequest::HealthCheckRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transmit.HealthCheckRequest)
}
inline PROTOBUF_NDEBUG_INLINE HealthCheckRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : service_(arena, from.service_),
        _cached_size_{0} {}

HealthCheckRequest::HealthCheckRequest(
    ::google::protobuf::Arena* arena,
    const HealthCheckRequest& from)
    : ::google::protobuf::Message(arena) {
  HealthCheckRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:transmit.HealthCheckRequest)
}
inline PROTOBUF_NDEBUG_INLINE HealthCheckRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : service_(arena),
        _cached_size_{0} {}

inline void HealthCheckRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HealthCheckRequest::~HealthCheckRequest() {
  // @@protoc_insertion_point(destructor:transmit.HealthCheckRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HealthCheckRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.service_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void HealthCheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:transmit.HealthCheckRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.service_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HealthCheckRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 43, 2> HealthCheckRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HealthCheckRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string service = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HealthCheckRequest, _impl_.service_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string service = 1;
    {PROTOBUF_FIELD_OFFSET(HealthCheckRequest, _impl_.service_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\7\0\0\0\0\0\0"
    "transmit.HealthCheckRequest"
    "service"
  }},
};

::uint8_t* HealthCheckRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmit.HealthCheckRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string service = 1;
  if (!this->_internal_service().empty()) {
    const std::string& _s = this->_internal_service();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "transmit.HealthCheckRequest.service");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transmit.HealthCheckRequest)
  return target;
}

::size_t HealthCheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transmit.HealthCheckRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service = 1;
  if (!this->_internal_service().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_service());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HealthCheckRequest::_class_data_ = {
    HealthCheckRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HealthCheckRequest::GetClassData() const {
  return &_class_data_;
}

void HealthCheckRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HealthCheckRequest*>(&to_msg);
  auto& from = static_cast<const HealthCheckRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transmit.HealthCheckRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_service().empty()) {
    _this->_internal_set_service(from._internal_service());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HealthCheckRequest::CopyFrom(const HealthCheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmit.HealthCheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HealthCheckRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HealthCheckRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HealthCheckRequest::InternalSwap(HealthCheckRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_, &other->_impl_.service_, arena);
}

::google::protobuf::Metadata HealthCheckRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transmit_2eproto_getter, &descriptor_table_transmit_2eproto_once,
      file_level_metadata_transmit_2eproto[6]);
}
// ===================================================================

class HealthCheckResponse::_Internal {
 public:
};

HealthCheckResponse::HealthCheckResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:transmit.HealthCheckResponse)
}
HealthCheckResponse::HealthCheckResponse(
    ::google::protobuf::Arena* arena, const HealthCheckResponse& from)
    : HealthCheckResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HealthCheckResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HealthCheckResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
HealthCheckResponse::~HealthCheckResponse() {
  // @@protoc_insertion_point(destructor:transmit.HealthCheckResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HealthCheckResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void HealthCheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:transmit.HealthCheckResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HealthCheckResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HealthCheckResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HealthCheckResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .transmit.HealthCheckResponse.ServingStatus status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HealthCheckResponse, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HealthCheckResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .transmit.HealthCheckResponse.ServingStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(HealthCheckResponse, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* HealthCheckResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:transmit.HealthCheckResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .transmit.HealthCheckResponse.ServingStatus status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transmit.HealthCheckResponse)
  return target;
}

::size_t HealthCheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transmit.HealthCheckResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .transmit.HealthCheckResponse.ServingStatus status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HealthCheckResponse::_class_data_ = {
    HealthCheckResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HealthCheckResponse::GetClassData() const {
  return &_class_data_;
}

void HealthCheckResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HealthCheckResponse*>(&to_msg);
  auto& from = static_cast<const HealthCheckResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:transmit.HealthCheckResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HealthCheckResponse::CopyFrom(const HealthCheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transmit.HealthCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HealthCheckResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HealthCheckResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HealthCheckResponse::InternalSwap(HealthCheckResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata HealthCheckResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transmit_2eproto_getter, &descriptor_table_transmit_2eproto_once,
      file_level_metadata_transmit_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace transmit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
