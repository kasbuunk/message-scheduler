// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: transmit.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package transmit;

@kotlin.jvm.JvmName("-initializedelayed")
public inline fun delayed(block: transmit.DelayedKt.Dsl.() -> kotlin.Unit): transmit.TransmitOuterClass.Delayed =
  transmit.DelayedKt.Dsl._create(transmit.TransmitOuterClass.Delayed.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `transmit.Delayed`
 */
public object DelayedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: transmit.TransmitOuterClass.Delayed.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: transmit.TransmitOuterClass.Delayed.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): transmit.TransmitOuterClass.Delayed = _builder.build()

    /**
     * `.google.protobuf.Timestamp transmit_at = 1;`
     */
    public var transmitAt: com.google.protobuf.Timestamp
      @JvmName("getTransmitAt")
      get() = _builder.getTransmitAt()
      @JvmName("setTransmitAt")
      set(value) {
        _builder.setTransmitAt(value)
      }
    /**
     * `.google.protobuf.Timestamp transmit_at = 1;`
     */
    public fun clearTransmitAt() {
      _builder.clearTransmitAt()
    }
    /**
     * `.google.protobuf.Timestamp transmit_at = 1;`
     * @return Whether the transmitAt field is set.
     */
    public fun hasTransmitAt(): kotlin.Boolean {
      return _builder.hasTransmitAt()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun transmit.TransmitOuterClass.Delayed.copy(block: `transmit`.DelayedKt.Dsl.() -> kotlin.Unit): transmit.TransmitOuterClass.Delayed =
  `transmit`.DelayedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val transmit.TransmitOuterClass.DelayedOrBuilder.transmitAtOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTransmitAt()) getTransmitAt() else null

